# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import projeto_pb2 as projeto__pb2


class GreeterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.set = channel.unary_unary(
                '/Greeter/set',
                request_serializer=projeto__pb2.HelloRequest.SerializeToString,
                response_deserializer=projeto__pb2.HelloReply.FromString,
                )
        self.get = channel.unary_unary(
                '/Greeter/get',
                request_serializer=projeto__pb2.HelloRequest.SerializeToString,
                response_deserializer=projeto__pb2.HelloReply.FromString,
                )
        self.delete = channel.unary_unary(
                '/Greeter/delete',
                request_serializer=projeto__pb2.HelloRequest.SerializeToString,
                response_deserializer=projeto__pb2.HelloReply.FromString,
                )
        self.inserirCliente = channel.unary_unary(
                '/Greeter/inserirCliente',
                request_serializer=projeto__pb2.HelloRequest.SerializeToString,
                response_deserializer=projeto__pb2.HelloReply.FromString,
                )
        self.modificarCliente = channel.unary_unary(
                '/Greeter/modificarCliente',
                request_serializer=projeto__pb2.HelloRequest.SerializeToString,
                response_deserializer=projeto__pb2.HelloReply.FromString,
                )
        self.recuperarCliente = channel.unary_unary(
                '/Greeter/recuperarCliente',
                request_serializer=projeto__pb2.HelloRequest.SerializeToString,
                response_deserializer=projeto__pb2.HelloReply.FromString,
                )
        self.apagarCliente = channel.unary_unary(
                '/Greeter/apagarCliente',
                request_serializer=projeto__pb2.HelloRequest.SerializeToString,
                response_deserializer=projeto__pb2.HelloReply.FromString,
                )
        self.inserirTarefa = channel.unary_unary(
                '/Greeter/inserirTarefa',
                request_serializer=projeto__pb2.HelloRequest.SerializeToString,
                response_deserializer=projeto__pb2.HelloReply.FromString,
                )
        self.modificarTarefa = channel.unary_unary(
                '/Greeter/modificarTarefa',
                request_serializer=projeto__pb2.HelloRequest.SerializeToString,
                response_deserializer=projeto__pb2.HelloReply.FromString,
                )
        self.listarTarefas = channel.unary_unary(
                '/Greeter/listarTarefas',
                request_serializer=projeto__pb2.HelloRequest.SerializeToString,
                response_deserializer=projeto__pb2.HelloReply.FromString,
                )
        self.apagarTarefas = channel.unary_unary(
                '/Greeter/apagarTarefas',
                request_serializer=projeto__pb2.HelloRequest.SerializeToString,
                response_deserializer=projeto__pb2.HelloReply.FromString,
                )


class GreeterServicer(object):
    """Missing associated documentation comment in .proto file."""

    def set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def inserirCliente(self, request, context):
        """Servidor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def modificarCliente(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def recuperarCliente(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def apagarCliente(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def inserirTarefa(self, request, context):
        """Cliente
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def modificarTarefa(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listarTarefas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def apagarTarefas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'set': grpc.unary_unary_rpc_method_handler(
                    servicer.set,
                    request_deserializer=projeto__pb2.HelloRequest.FromString,
                    response_serializer=projeto__pb2.HelloReply.SerializeToString,
            ),
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=projeto__pb2.HelloRequest.FromString,
                    response_serializer=projeto__pb2.HelloReply.SerializeToString,
            ),
            'delete': grpc.unary_unary_rpc_method_handler(
                    servicer.delete,
                    request_deserializer=projeto__pb2.HelloRequest.FromString,
                    response_serializer=projeto__pb2.HelloReply.SerializeToString,
            ),
            'inserirCliente': grpc.unary_unary_rpc_method_handler(
                    servicer.inserirCliente,
                    request_deserializer=projeto__pb2.HelloRequest.FromString,
                    response_serializer=projeto__pb2.HelloReply.SerializeToString,
            ),
            'modificarCliente': grpc.unary_unary_rpc_method_handler(
                    servicer.modificarCliente,
                    request_deserializer=projeto__pb2.HelloRequest.FromString,
                    response_serializer=projeto__pb2.HelloReply.SerializeToString,
            ),
            'recuperarCliente': grpc.unary_unary_rpc_method_handler(
                    servicer.recuperarCliente,
                    request_deserializer=projeto__pb2.HelloRequest.FromString,
                    response_serializer=projeto__pb2.HelloReply.SerializeToString,
            ),
            'apagarCliente': grpc.unary_unary_rpc_method_handler(
                    servicer.apagarCliente,
                    request_deserializer=projeto__pb2.HelloRequest.FromString,
                    response_serializer=projeto__pb2.HelloReply.SerializeToString,
            ),
            'inserirTarefa': grpc.unary_unary_rpc_method_handler(
                    servicer.inserirTarefa,
                    request_deserializer=projeto__pb2.HelloRequest.FromString,
                    response_serializer=projeto__pb2.HelloReply.SerializeToString,
            ),
            'modificarTarefa': grpc.unary_unary_rpc_method_handler(
                    servicer.modificarTarefa,
                    request_deserializer=projeto__pb2.HelloRequest.FromString,
                    response_serializer=projeto__pb2.HelloReply.SerializeToString,
            ),
            'listarTarefas': grpc.unary_unary_rpc_method_handler(
                    servicer.listarTarefas,
                    request_deserializer=projeto__pb2.HelloRequest.FromString,
                    response_serializer=projeto__pb2.HelloReply.SerializeToString,
            ),
            'apagarTarefas': grpc.unary_unary_rpc_method_handler(
                    servicer.apagarTarefas,
                    request_deserializer=projeto__pb2.HelloRequest.FromString,
                    response_serializer=projeto__pb2.HelloReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Greeter(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Greeter/set',
            projeto__pb2.HelloRequest.SerializeToString,
            projeto__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Greeter/get',
            projeto__pb2.HelloRequest.SerializeToString,
            projeto__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Greeter/delete',
            projeto__pb2.HelloRequest.SerializeToString,
            projeto__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def inserirCliente(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Greeter/inserirCliente',
            projeto__pb2.HelloRequest.SerializeToString,
            projeto__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def modificarCliente(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Greeter/modificarCliente',
            projeto__pb2.HelloRequest.SerializeToString,
            projeto__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def recuperarCliente(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Greeter/recuperarCliente',
            projeto__pb2.HelloRequest.SerializeToString,
            projeto__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def apagarCliente(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Greeter/apagarCliente',
            projeto__pb2.HelloRequest.SerializeToString,
            projeto__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def inserirTarefa(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Greeter/inserirTarefa',
            projeto__pb2.HelloRequest.SerializeToString,
            projeto__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def modificarTarefa(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Greeter/modificarTarefa',
            projeto__pb2.HelloRequest.SerializeToString,
            projeto__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listarTarefas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Greeter/listarTarefas',
            projeto__pb2.HelloRequest.SerializeToString,
            projeto__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def apagarTarefas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Greeter/apagarTarefas',
            projeto__pb2.HelloRequest.SerializeToString,
            projeto__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
